#running the code

= Introduction =

The physical problem is the following. We consider beams of particles moving with respect to each other. 

We consider two cases:

 # A system made of hydrogen gas ionized. The nuclei of the hydrogen weigh 1836 times more than the electrons. We consider them motionless: their time of response is so much slower than the electrons as to make this assumption valid for our scope. The electrons are themselves divided into two populations drifting with respect to each other. We select a frame of reference where the two beams have equal but opposite velocity. 

 # A system made of electrons and positrons (no hydrogen is considered her) drifting relative to each other. The frame is again chosen so that the velocity is equal but opposite for the two species.

= Parameters for the simulation =

# The system size and the number of cells in which it is divided. They are set in the class *GridCart1D.java* (in java, classes are the names of the files containing the program): 

 * BoxLength = 20*Math.PI; sets the box size

 * NumOfGridPoints = 128; sets the number of cells it is divided into

# The beam properties are selected in the class *Maxwellian.java*

 * RELATIVISTIC = false; decides whether to use Newtonian (false) or relativistic (true) mechanics

 * MeanBeamVelocity = .9; Velocity of the beams (normalized to the speed of light)

 * VT = 0.001; thermal spread of the beams (normalized to the speed of light)

# Other parameters of the simulations are chosen in *RelSpecies.java*

 * NumberOfParticles = 10000; Number of total particles in the beams

 * mode=1; harmonic perturbation number 
 
 * Perturbation = .01*mode; amplitude of the perturbation

 * dt = 1E-2; time step

 * tfin = 200; total duration of the simulation in normalized units.

= Electron electron vs electron positron =

For electron/electron, use:
private static final double Background = 1;
private static final boolean positron = false;


For electron/positron, use:
private static final double Background = 0;
private static final boolean positron = true;